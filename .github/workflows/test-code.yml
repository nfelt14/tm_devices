---
name: Test code
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:
    inputs:
      repo-name:
        description: The name of the repository to use to gate Codecov uploads.
        required: true
        type: string
      node-version:  # The node version needs to stay in sync with .readthedocs.yml
        description: The version of Node.js to install; if set, mermaid-cli will be
          installed via npm and graphviz will be installed via apt.
        required: false
        type: number
# Cancel running jobs for the same workflow and branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
# IMPORTANT: Any new jobs need to be added to the check-tests-passed job to ensure they correctly gate code changes
jobs:
  # Basic testing & linting
  test-general:
    if: false  # TODO: remove
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions
      - name: Run tox
        run: tox -v
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: artifact_${{ matrix.platform }}_${{ matrix.python-version }}_tests_and_linting
          path: |
            .results_*/**
            .coverage*
  # Quick testing with coverage (no linting)
  test-fast:
    runs-on: ${{ matrix.os_name }}-latest
    env:
      REPO_NAME: tektronix/${{ inputs.repo-name || 'tm_devices' }}
      pytest_report_title: Test Results (${{ matrix.os_name }})
    strategy:
      fail-fast: false
      matrix:
        os_name: [ubuntu, windows, macos]
    steps:
      - uses: actions/checkout@v4
      - if: ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - if: ${{ inputs.node-version }}
        name: Install non-python documentation dependencies
        run: |
          npm install -g @mermaid-js/mermaid-cli
          sudo apt install --no-install-recommends --assume-yes graphviz
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: x  # any version
          check-latest: true
      - name: Install tox
        run: python -m pip install tox
      - name: Test
        run: tox -ve tests
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: artifact_${{ matrix.os_name }}_tests
          path: |
            .results_*/**
            .coverage*
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ github.repository == env.REPO_NAME && !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.coverage_tests.xml
          name: codecov-${{ matrix.os_name }}
          fail_ci_if_error: true
    outputs:
      os_name_array: (${{ toJson(matrix.os_name) }})
  upload-test-results:
    if: ${{ !cancelled() }}
    needs: test-fast
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os_name: ${{ fromJson(needs.test-fast.outputs.os_name_array) }}
    permissions:
      checks: write
      pull-requests: write
      actions: read
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Publish Test Results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test-results-${{ matrix.os_name }}
          recreate: true
          path: artifacts/artifact_${{ matrix.os_name }}_tests/.results_tests/github_report.md
      - name: Add workflow link to comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test-results-${{ matrix.os_name }}
          append: true
          message: |
            <p><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Link to workflow run</a></p>
  # Check that all jobs passed
  check-tests-passed:
    if: ${{ !cancelled() }}
    needs: [test-general, test-fast]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
